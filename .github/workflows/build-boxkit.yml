name: build-boxkit
on:
  schedule:
    - cron: '0 8,20 * * *'  # 7am and 7pm every day

  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    paths-ignore:
      - '**/README.md'
  workflow_dispatch:

env:
  DOCKER_BUILDKIT: 1
  IMAGE_FLAVOR: asus
  AKMODS_FLAVOR: asus
  IMAGE_NAME: orora-cli
  PROJECT_ID: 5rkt16xwr1
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  push-ghcr:
    name: Build and push image
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      fail-fast: false
    steps:
      - name: Checkout Push to Registry action
        uses: actions/checkout@v4
      - name: Set up Depot CLI
        uses: depot/setup-action@v1
      - name: Set up QEMU
        timeout-minutes: 1
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      # Workaround bug where capital letters in your GitHub username make it impossible to push to GHCR.
      # https://github.com/macbre/push-to-ghcr/issues/12
      - name: Lowercase Registry
        id: registry_case
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ env.IMAGE_REGISTRY }}

      - name: Image Metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          flavor: |
            latest=true
          images: |
            ${{ steps.registry_case.outputs.lowercase }}/${{ env.IMAGE_NAME }}
          labels: |
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/bayou-brogrammer/orora-cli/main/README.md

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: build_push
        uses: depot/build-push-action@v1
        with:
          buildx-fallback: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: ${{ env.IMAGE_NAME }}
          project: ${{ env.PROJECT_ID }}
          labels: ${{ steps.meta.outputs.labels }}
          token: ${{ secrets.DEPOT_PROJECT_TOKEN }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ steps.meta.outputs.tags }}

      # Sign container
      - uses: sigstore/cosign-installer@v3.3.0

      - name: Sign container image
        if: github.event_name != 'pull_request'
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ steps.registry_case.outputs.lowercase }}/${{ env.IMAGE_NAME }}@${TAGS}
        env:
          TAGS: ${{ steps.build_push.outputs.digest }}
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}

      - name: Echo outputs
        if: github.event_name != 'pull_request'
        # echo "${{ toJSON(steps.build_push.outputs) }}"
        run: |
          echo "${{ steps.build_push.outputs }}"
